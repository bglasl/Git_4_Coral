install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
install.packages("tibble")
source('http://bioconductor.org/biocLite.R')
biocLite('phyloseq')
library(phyloseq)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tibble)
### load data ####
# load OTU table
OTU_table<-read.csv('otu_table.csv', header = TRUE, sep = ",", dec = ".", strip.white = TRUE)
head(OTU_table)
str(OTU_table)
OTU_table_T<-read.csv('otu_table3506_T.csv', header = TRUE, sep = ",", dec = ".", strip.white = TRUE)
head(OTU_table_T) # OTUs in rows
str(OTU_table_T)
METADATA<-read.csv("sample_metadata_new2.csv", header = TRUE, sep = ",")
head(METADATA)
levels(METADATA$Genotype)
TAXADATA<-read.csv("taxonomy.csv", header = TRUE, sep = ",")
head(TAXADATA)
# rooted tree
TREE<-read_tree("tree.nwk")
TREE<-phy_tree(TREE)
# join datasets
library(dplyr)
library(tidyr)
OTU_table_new<-right_join(METADATA, OTU_table, by="Sample_ID")
levels(OTU_table_new$Treatment)
### prep Phyloseq Table ####
# Taxa table
TAXA_TABLE<-as.data.frame(TAXADATA[,1])
rownames(TAXADATA)<-TAXADATA[,1]
TAXA_TABLE_split<-TAXADATA %>% separate(Taxon, c("Domain","Phylum","Class","Order","Family","Genus","Species"), sep=";", remove=FALSE)
TAXA_TABLE_matrix<-as.matrix(TAXA_TABLE_split)
TAXA_TABLE<-tax_table(TAXA_TABLE_matrix) # tax_table=matrix
# OTU table
rownames(OTU_table_T)<-OTU_table_T[,1]
OTU_table_T<-data.frame(OTU_table_T[,-1])
OTU_TABLE<-otu_table(OTU_table_T, taxa_are_rows = TRUE)
sample_names(OTU_TABLE)
# Sample data
SAMPLEDATA<-OTU_table_new[,1:13]
rownames(SAMPLEDATA)<-OTU_table_new$Sample_ID
SAMPLEDATA<-data.frame(SAMPLEDATA[,-1])
levels(SAMPLEDATA$Genotype)
SAMPLEDATA<-sample_data(SAMPLEDATA) #Sample_data = data.frame
sample_names(SAMPLEDATA)
SAMPLEDATA$Treatment<-factor(SAMPLEDATA$Treatment, levels=c("field_control", "control", "stress_ambient", "stress_2100"))
SAMPLEDATA$SamplingTimepoint<-factor(SAMPLEDATA$SamplingTimepoint, levels=c("t0","t1","t3","t4","t5"))
SAMPLEDATA$Treatment_Timepoint<-factor(SAMPLEDATA$Treatment_Timepoint, levels=c("field control t0",
"control t1","control t3", "control t4","control t5",
"ambient stress t1","ambient stress t3", "ambient stress t4","ambient stress t5",
"2100 stress t1","2100 stress t3", "2100 stress t4","2100 stress t5"))
#combine Sampledata, Taxadata, OTU table to phyloseq table
PHYLOSEQ_TABLE_count<-phyloseq(OTU_TABLE, SAMPLEDATA, TAXA_TABLE, TREE)
PHYLOSEQ_TABLE_count
save(PHYLOSEQ_TABLE_count, file="PHYLOSEQ_TABLE_Count.RData")
# transform sample counts to relative abundance
PHYLOSEQ_TABLE = transform_sample_counts(PHYLOSEQ_TABLE_count, function(x)100*x/sum(x))
otu_table(PHYLOSEQ_TABLE)
PHYLOSEQ_TABLE
save(PHYLOSEQ_TABLE, file="PHYLOSEQ_TABLE.RData")
sample_data(PHYLOSEQ_TABLE)
load(file="PHYLOSEQ_TABLE.RData")
library(phyloseq)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tibble)
library(vegan)
install.packages("vegan")
PHYLOSEQ_TABLE_control=subset_samples(PHYLOSEQ_TABLE, Treatment!="field_control")
PHYLOSEQ_TABLE_control
#### z score ####
# transfrom metadata z-score
TEMP<-read.csv("sample_metadata_new2.csv", header = TRUE, sep=",", dec=".", strip.white = TRUE)
str(TEMP)
TEMP<-TEMP %>% filter(Treatment != "field_control")
TEMP
TEMP_stand<-decostand(TEMP[,c(9,10,12,13)], method = "standardize", na.rm=TRUE)
TEMP_stand
# upload z-score metadata
Sample_ID<-TEMP$Sample_ID
newMETA<-cbind(TEMP_stand, Sample_ID)
str(newMETA)
rownames(newMETA)<-newMETA$Sample_ID
META<-inner_join(TEMP, newMETA, by="Sample_ID")
rownames(META)<-META$Sample_ID
METADATA<-sample_data(META)
sample_data(PHYLOSEQ_TABLE_control)<-METADATA
sample_data(PHYLOSEQ_TABLE_control)
#### re-arrange data ####
longTemp<-META%>% select(SamplingTimepoint, Protein.y, Zoox.y, Chla.y, PSYield.y, Treatment) %>% tidyr::gather(key=environmental_data, value=zscore, -SamplingTimepoint, -Treatment)
longTempMEAN<-longTemp %>% group_by(SamplingTimepoint, Treatment,environmental_data) %>% summarise(MEAN=mean(zscore), SD=sd(zscore))
longTempMEAN$Treatment<-factor(longTempMEAN$Treatment, levels=c("field_control", "control", "stress_ambient", "stress_2100"))
### plot graph ####
library(ggplot2)
plot<-ggplot(longTempMEAN, aes(x=SamplingTimepoint, y=`MEAN`, colour=environmental_data))+
theme_classic(base_size = 16, base_family = "Helvetica")+
geom_hline(yintercept=c(0,0), linetype="dotted")+
geom_errorbar(aes(ymax=(MEAN+SD), ymin=(MEAN-SD)), colour="black", width=0.2)+
geom_point(size=3)+
geom_line(aes(group=Treatment))+
scale_color_brewer(palette = "Set1")+
facet_wrap(~Treatment+environmental_data)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_wrap(~Treatment+environmental_data)+
ylab("z-scores")+
xlab("days")
plot
pdf('Fig_1b.pdf', width=10, height=8)
print(plot)
graphics.off()
##### Piechart Figure_3 ####
# Piechart
load(file="PHYLOSEQ_TABLE.RData")
library(phyloseq)
PHYLOSEQ_TABLE_control=subset_samples(PHYLOSEQ_TABLE, Treatment!="field_control")
PHYLOSEQ_TABLE_control
#### PIECHART ####
OTU<-as.data.frame(otu_table(PHYLOSEQ_TABLE_control))
library(data.table)
setDT(OTU, keep.rownames = TRUE)[]
OTU<-dplyr::rename(OTU, Feature_ID=rn)
TAXA<-as.data.frame(tax_table(PHYLOSEQ_TABLE_control))
library(dplyr)
library(tidyr)
Piecharttable<-right_join(OTU, TAXA, by="Feature_ID")
Endos_all<-Piecharttable %>% filter(Genus=="D_5__Endozoicomonas") %>%
tidyr::gather("Sample","Abundance", 2:97) %>%
group_by(Sample) %>%
summarise(MEAN_Endo=sum(Abundance)) %>%
summarise(MEAN_Endo_total=mean(MEAN_Endo), SD=sd(MEAN_Endo))
Endos_all
source('http://bioconductor.org/biocLite.R')
biocLite('microbiome')
library(ggplot2)
library(phyloseq)
load(file="PHYLOSEQ_TABLE.RData")
PHYLOSEQ_TABLE_control=subset_samples(PHYLOSEQ_TABLE, Treatment!="field_control")
PHYLOSEQ_TABLE_control
#remove field_control samples
PHYLOSEQ_TABLE_control=subset_samples(PHYLOSEQ_TABLE, Treatment!="field_control")
PHYLOSEQ_TABLE_control
#### Boxplot - rel.abund/Genotype ####
Endos<-Piecharttable %>% filter(Genus=="D_5__Endozoicomonas") %>%
filter(Feature_ID!="c0e6c66cfd0673747e59936d6c050407") %>%
tidyr::gather("SAMPLE","Abundance", 2:97) %>%
group_by(SAMPLE) %>%summarise(Endozoicomonas=sum(Abundance))
Core<-Piecharttable %>% filter(Feature_ID=="c0e6c66cfd0673747e59936d6c050407") %>%
tidyr::gather("SAMPLE","Abundance", 2:97) %>%
group_by(SAMPLE) %>%summarise(core=sum(Abundance))
SAMPLEDATA<-data.frame(sample_data(PHYLOSEQ_TABLE_control))
Endo_table<-inner_join(SAMPLEDATA,Endos, by="SAMPLE")
Endo_table<-inner_join(Endo_table, Core, by="SAMPLE")
Endo_table_melt<-Endo_table %>% select(-PSYield, -Chla, -Zoox, -Protein)
Endo_table_melt<-melt(Endo_table_melt)
plot1<-ggplot(Endo_table_melt, aes(x=variable, y=value, fill=variable))+
facet_wrap(~Genotype)+
geom_boxplot()+
theme_classic(base_size = 16, base_family = "Helvetica")+
scale_fill_brewer(palette = "Paired")+
ylab("rel.abundance [%]")+
xlab("")+
theme(legend.position = "none")+
scale_fill_manual(values=c("#1f78b4","#a6cee3"))
plot1
ENDOANOVA<-aov(value~Genotype+variable, data=Endo_table_melt)
summary(ENDOANOVA) #sig 1.03e-05 ***
#only keep Endozoicmonas
Endo_Control_PHY_rel<-subset_taxa(PHYLOSEQ_TABLE_control, Genus=="D_5__Endozoicomonas")
Endo_Control_PHY_rel
#### Endozoicomonas frequency ####
Endo_freq<-psmelt(Endo_Control_PHY_rel)
head(Endo_freq)
ANOVA<-aov(Abundance~Treatment+SamplingTimepoint, data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Treatment*SamplingTimepoint, data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Genotype, data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Treatment*SamplingTimepoint*Genotype, data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Treatment*SamplingTimepoint, data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Genotype, data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Treatment*SamplingTimepoint, data=Endo_freq)
summary(ANOVA)
capture.output(summary(ANOVA), file="Endo_freq_TreatTime.doc")
ANOVA<-aov(Abundance~Genotype, data=Endo_freq)
summary(ANOVA)
capture.output(summary(ANOVA), file="Endo_freq_Genotype.doc")
ANOVA<-aov(Abundance~Treatment*Timepoint+Error(Genotype), data=Endo_freq)
ANOVA<-aov(Abundance~Treatment*SamplingTimepoint+Error(Genotype), data=Endo_freq)
summary(ANOVA)
capture.output(summary(ANOVA), file="Endo_freq_withinGenotype.doc")
ANOVA<-aov(Abundance~Treatment+SamplingTimepoint, data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Treatment*SamplingTimepoint, data=Endo_freq)
summary(ANOVA)
capture.output(summary(ANOVA), file="Endo_freq_TreatTime.doc")
ANOVA<-aov(Abundance~Genotype, data=Endo_freq)
summary(ANOVA)
capture.output(summary(ANOVA), file="Endo_freq_Genotype.doc")
ANOVA<-aov(Abundance~Treatment*SamplingTimepoint+Error(Genotype), data=Endo_freq)
summary(ANOVA)
capture.output(summary(ANOVA), file="Endo_freq_withinGenotype.doc")
ANOVA<-aov(Abundance~Treatment*SamplingTimepoint, data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Genotype, data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Treatment*SamplingTimepoint+Error(Genotype), data=Endo_freq)
summary(ANOVA)
ANOVA<-aov(Abundance~Treatment+Error(Genotype), data=Endo_freq)
summary(ANOVA)
capture.output(summary(ANOVA), file="Endo_freq_withinGenotype.doc")
load(file="PHYLOSEQ_TABLE_Count.RData")
PHYLOSEQ_TABLE_control_count=subset_samples(PHYLOSEQ_TABLE_count, Treatment!="field_control")
PHYLOSEQ_TABLE_control_count
Endo_Control_PHY_count<-subset_taxa(PHYLOSEQ_TABLE_control_count, Genus=="D_5__Endozoicomonas")
Endo_Control_PHY_count
#### Alpha diversity ####
Endo_Control_PHY_count
plot<-plot_richness(Endo_Control_PHY_count, x="Treatment", measures=c("Shannon","Observed"))+
geom_boxplot()+
theme_classic()
plot
pdf('ALPHA_ENDO.pdf', width=6, height=6)
print(plot)
graphics.off()
plot<-plot_richness(CORE_count, x="Genotype", measures=c("Shannon","Observed"))+
geom_boxplot()+
theme_classic()
plot
plot<-plot_richness(Endo_Control_PHY_count, x="Genotype", measures=c("Shannon","Observed"))+
geom_boxplot()+
theme_classic()
plot
pdf('ALPHA_ENDOGENOTYPE.pdf', width=6, height=6)
print(plot)
graphics.off()
RICHNESS<-estimate_richness(Endo_Control_PHY_count, split=TRUE, measures=c("Shannon","Observed"))
RICHNESS<-as.data.frame(RICHNESS)
RICHNESS<-tibble::rownames_to_column(as.data.frame(RICHNESS), var="Sample_ID")
Richness_table<-right_join(METADATA, RICHNESS, by="Sample_ID")
# treatment nor SamplingTimepoint has no overall effect alpha diversity (Endozoicomonas)
model1<-aov((Shannon)~Treatment*SamplingTimepoint, data=Richness_table)
summary(model1) #not significant
# Effect of Genotype on the Endozoicomoas diversity
model1<-aov((Shannon)~Genotype, data=Richness_table)
summary(model1) #p=0.0452 *  significant
# Effect of Genotype on the Endozoicomoas diversity
model1<-aov((Shannon)~Genotype, data=Richness_table)
summary(model1) #p=0.0452 *  significant
# Effect of Genotype on the Endozoicomoas diversity
model1<-aov((Observed)~Genotype, data=Richness_table)
summary(model1) #sign p=1.14e-08 ***
# treatment nor SamplingTimepoint has no overall effect alpha diversity (Endozoicomonas)
model1<-aov((Shannon)~SamplingTimepoint+Error(Treatment), data=Richness_table)
summary(model1) #not significant
# Richness
# treatment nor SamplingTimepoint has no overall effect alpha diversity (Endozoicomonas)
model1<-aov((Observed)~SamplingTimepoint+Error(Treatment), data=Richness_table)
summary(model1) #not significant
#### ADONIS & BETA DISPERSION ####
# Adonis = permutational Multivariate Analysis of variance using distance matrices
### using adonis2 ### - this is the way to go!
df=as(sample_data(PHYLOSEQ_TABLE_control), 'data.frame')
d=phyloseq::distance(PHYLOSEQ_TABLE_control,'bray')
ADONIS<-adonis(d~Genotype, data=df, permutations = 10000, method = "bray")
ADONIS
#### ADONIS ####
# Adonis = permutational Multivariate Analysis of variance using distance matrices
### using adonis2 ### - this is the way to go!
df=as(sample_data(PHYLOSEQ_TABLE_control), 'data.frame')
d=phyloseq::distance(PHYLOSEQ_TABLE_control,'bray')
ADONIS<-adonis(d~Genotype, data=df, permutations = 10000, method = "bray")
ADONIS #sign -> sign - endozoicomonas community varies significanlty between coral host genotypes
capture.output(ADONIS,file="Adonis_EndozoicomonasGenotypeControl.doc")
perm<-how(nperm=10000)
setBlocks(perm)<-with(df, Genotype)
ADONIS2<-adonis2(d~Treatment, data=df, permutations = perm, method = "bray")
ADONIS2 #not sign -> no shift in the microbial community between treatments within a genotype
capture.output(ADONIS2,file="Adonis2_TimeeffectEndoGenotypeControl.doc")
#### ADONIS ####
# Adonis = permutational Multivariate Analysis of variance using distance matrices
### using adonis2 ### - this is the way to go!
df=as(sample_data(Endo_Control_PHY_rel), 'data.frame')
d=phyloseq::distance(Endo_Control_PHY_rel,'bray')
ADONIS<-adonis(d~Genotype, data=df, permutations = 10000, method = "bray")
ADONIS #sign -> sign - endozoicomonas community varies significanlty between coral host genotypes
capture.output(ADONIS,file="Adonis_EndozoicomonasGenotypeControl.doc")
perm<-how(nperm=10000)
setBlocks(perm)<-with(df, Genotype)
ADONIS2<-adonis2(d~Treatment, data=df, permutations = perm, method = "bray")
ADONIS2 #not sign -> no shift in the microbial community between treatments within a genotype
#### CCA ####
ORDCCA<-ordinate(Endo_Control_PHY_rel,"CCA", formula = ~Genotype)
plot_ordination(Endo_Control_PHY_rel, ORDCCA,color = "Genotype")
ORDCCA # Genotype explains 27.23% of observed variability
library(vegan)
anova.cca(ORDCCA,by="term", permutations = 10000) # Genotype also highly sign p=0.000999 ***
